#!/usr/bin/env bash

function auto_version_elm_js () {
   if cmp ../client/elm.js static/js/elm*; then
        echo "elm.js hasn't changed."
        return;
   fi

   echo "--> Incrementing elm.js version number by 1."
    [[ $(ls static/js/elm*) =~ ([0-9]+) ]]
    rm static/js/elm*.js
    version=$(((${BASH_REMATCH[1]} + 1))) 
    cp -v ../client/elm.js static/js/elm-v${version}.js
   
    echo "--> Changing elm.js filename in handlers"
    sed -i -e "s/elm_v.*_js/elm_v${version}_js/" templates/default-layout-wrapper.hamlet
}

# Call this function when `yesod keter` won't work
function fallback_function () { 

EXE_FILE=".stack-work/install/x86_64-linux/lts-5.12/7.10.3/bin/webservice"

echo '--> Removing keter file if any'
rm webservice.keter

auto_version_elm_js;

echo "--> Running stack clean"
stack clean

echo "--> Running stack build"
stack build

echo "-> Copying executable file"
mkdir -p dist/build/webservice/
cp ${EXE_FILE} dist/build/webservice/

echo "--> Building keter file."
tar czfv - dist/build/webservice/webservice config static .well-known > webservice.keter

echo "--> Copying keter file to server"
scp webservice.keter vicarie:~/keter/incoming/

echo "--> Done!"

}

function deploy () {

    echo '--> Removing keter file if any'
    rm webservice.keter
    
    echo "--> Running 'stack exec -- yesod keter'"
    stack exec -- yesod keter
}

fallback_function;
